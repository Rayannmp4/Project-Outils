{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nconst {\n  Source\n} = require('./scriptTypes');\n\n/**\n * Represents a base log entry.\n * Described in https://w3c.github.io/webdriver-bidi/#types-log-logentry.\n */\nclass BaseLogEntry {\n  /**\n   * Creates a new instance of BaseLogEntry.\n   * @param {string} level - The log level.\n   * @param {source} source - Script Source\n   * @param {string} text - The log source.\n   * @param {string} text - The log text.\n   * @param {number} timeStamp - The log timestamp.\n   * @param {string} stackTrace - The log stack trace.\n   */\n  constructor(level, source, text, timeStamp, stackTrace) {\n    this._level = level;\n    this._source = new Source(source);\n    this._text = text;\n    this._timeStamp = timeStamp;\n    this._stackTrace = stackTrace;\n  }\n\n  /**\n   * Gets the log level.\n   * @returns {string} The log level.\n   */\n  get level() {\n    return this._level;\n  }\n\n  /**\n   * Gets the log text.\n   * @returns {string} The log text.\n   */\n  get text() {\n    return this._text;\n  }\n\n  /**\n   * Gets the log timestamp.\n   * @returns {number} The log timestamp.\n   */\n  get timeStamp() {\n    return this._timeStamp;\n  }\n\n  /**\n   * Gets the log stack trace.\n   * @returns {string} The log stack trace.\n   */\n  get stackTrace() {\n    return this._stackTrace;\n  }\n  get source() {\n    return this._source;\n  }\n}\n\n/**\n * Represents a generic log entry.\n * @class\n * @extends BaseLogEntry\n */\nclass GenericLogEntry extends BaseLogEntry {\n  /**\n   * Creates an instance of GenericLogEntry.\n   * @param {string} level - The log level.\n   * @param {source} source - Script Source\n   * @param {string} text - The log text.\n   * @param {Date} timeStamp - The log timestamp.\n   * @param {string} type - The log type.\n   * @param {string} stackTrace - The log stack trace.\n   */\n  constructor(level, source, text, timeStamp, type, stackTrace) {\n    super(level, source, text, timeStamp, stackTrace);\n    this._type = type;\n  }\n\n  /**\n   * Gets the log type.\n   * @returns {string} The log type.\n   */\n  get type() {\n    return this._type;\n  }\n}\n\n/**\n * Represents a log entry for console logs.\n * @class\n * @extends GenericLogEntry\n */\nclass ConsoleLogEntry extends GenericLogEntry {\n  constructor(level, source, text, timeStamp, type, method, args, stackTrace) {\n    super(level, source, text, timeStamp, type, stackTrace);\n    this._method = method;\n    this._args = args;\n  }\n\n  /**\n   * Gets the method associated with the log entry.\n   * @returns {string} The method associated with the log entry.\n   */\n  get method() {\n    return this._method;\n  }\n  /**\n   * Gets the arguments associated with the log entry.\n   * @returns {Array} The arguments associated with the log entry.\n   */\n  get args() {\n    return this._args;\n  }\n}\n\n/**\n * Represents a log entry for JavaScript logs.\n * @class\n * @extends GenericLogEntry\n */\nclass JavascriptLogEntry extends GenericLogEntry {\n  constructor(level, source, text, timeStamp, type, stackTrace) {\n    super(level, source, text, timeStamp, type, stackTrace);\n  }\n}\n\n// PUBLIC API\n\nmodule.exports = {\n  BaseLogEntry,\n  GenericLogEntry,\n  ConsoleLogEntry,\n  JavascriptLogEntry\n};","map":{"version":3,"names":["Source","require","BaseLogEntry","constructor","level","source","text","timeStamp","stackTrace","_level","_source","_text","_timeStamp","_stackTrace","GenericLogEntry","type","_type","ConsoleLogEntry","method","args","_method","_args","JavascriptLogEntry","module","exports"],"sources":["C:/Users/rayan/Documents/GitHub/Project-Outils/node_modules/selenium-webdriver/bidi/logEntries.js"],"sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict'\n\nconst { Source } = require('./scriptTypes')\n\n/**\n * Represents a base log entry.\n * Described in https://w3c.github.io/webdriver-bidi/#types-log-logentry.\n */\nclass BaseLogEntry {\n  /**\n   * Creates a new instance of BaseLogEntry.\n   * @param {string} level - The log level.\n   * @param {source} source - Script Source\n   * @param {string} text - The log source.\n   * @param {string} text - The log text.\n   * @param {number} timeStamp - The log timestamp.\n   * @param {string} stackTrace - The log stack trace.\n   */\n  constructor(level, source, text, timeStamp, stackTrace) {\n    this._level = level\n    this._source = new Source(source)\n    this._text = text\n    this._timeStamp = timeStamp\n    this._stackTrace = stackTrace\n  }\n\n  /**\n   * Gets the log level.\n   * @returns {string} The log level.\n   */\n  get level() {\n    return this._level\n  }\n\n  /**\n   * Gets the log text.\n   * @returns {string} The log text.\n   */\n  get text() {\n    return this._text\n  }\n\n  /**\n   * Gets the log timestamp.\n   * @returns {number} The log timestamp.\n   */\n  get timeStamp() {\n    return this._timeStamp\n  }\n\n  /**\n   * Gets the log stack trace.\n   * @returns {string} The log stack trace.\n   */\n  get stackTrace() {\n    return this._stackTrace\n  }\n\n  get source() {\n    return this._source\n  }\n}\n\n/**\n * Represents a generic log entry.\n * @class\n * @extends BaseLogEntry\n */\nclass GenericLogEntry extends BaseLogEntry {\n  /**\n   * Creates an instance of GenericLogEntry.\n   * @param {string} level - The log level.\n   * @param {source} source - Script Source\n   * @param {string} text - The log text.\n   * @param {Date} timeStamp - The log timestamp.\n   * @param {string} type - The log type.\n   * @param {string} stackTrace - The log stack trace.\n   */\n  constructor(level, source, text, timeStamp, type, stackTrace) {\n    super(level, source, text, timeStamp, stackTrace)\n    this._type = type\n  }\n\n  /**\n   * Gets the log type.\n   * @returns {string} The log type.\n   */\n  get type() {\n    return this._type\n  }\n}\n\n/**\n * Represents a log entry for console logs.\n * @class\n * @extends GenericLogEntry\n */\nclass ConsoleLogEntry extends GenericLogEntry {\n  constructor(level, source, text, timeStamp, type, method, args, stackTrace) {\n    super(level, source, text, timeStamp, type, stackTrace)\n    this._method = method\n    this._args = args\n  }\n\n  /**\n   * Gets the method associated with the log entry.\n   * @returns {string} The method associated with the log entry.\n   */\n  get method() {\n    return this._method\n  }\n  /**\n   * Gets the arguments associated with the log entry.\n   * @returns {Array} The arguments associated with the log entry.\n   */\n  get args() {\n    return this._args\n  }\n}\n\n/**\n * Represents a log entry for JavaScript logs.\n * @class\n * @extends GenericLogEntry\n */\nclass JavascriptLogEntry extends GenericLogEntry {\n  constructor(level, source, text, timeStamp, type, stackTrace) {\n    super(level, source, text, timeStamp, type, stackTrace)\n  }\n}\n\n// PUBLIC API\n\nmodule.exports = {\n  BaseLogEntry,\n  GenericLogEntry,\n  ConsoleLogEntry,\n  JavascriptLogEntry,\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}