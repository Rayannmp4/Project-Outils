{"ast":null,"code":"const {\n  Builder,\n  By,\n  until\n} = require('selenium-webdriver');\nasync function testLogin() {\n  const driver = await new Builder().forBrowser('chrome').build();\n  try {\n    console.log(\"üöÄ Ouverture de l'application...\");\n    await driver.get('http://localhost:3000');\n    console.log(\"‚è≥ Remplissage des champs...\");\n    await driver.findElement(By.id('email')).sendKeys('admin@test.com');\n    await driver.findElement(By.id('password')).sendKeys('password');\n    await driver.findElement(By.css('button[type=\"submit\"]')).click();\n    console.log(\"üîÑ Attente de la redirection vers /dashboard...\");\n    await driver.wait(until.urlContains('/dashboard'), 5000);\n    const url = await driver.getCurrentUrl();\n    if (url.includes('/dashboard')) {\n      console.log(\"‚úÖ Connexion r√©ussie !\");\n    } else {\n      console.log(\"‚ùå Redirection √©chou√©e !\");\n    }\n  } catch (error) {\n    console.error(\"‚ùå Erreur lors du test :\", error.message);\n  } finally {\n    await driver.quit();\n  }\n}\ntestLogin();","map":{"version":3,"names":["Builder","By","until","require","testLogin","driver","forBrowser","build","console","log","get","findElement","id","sendKeys","css","click","wait","urlContains","url","getCurrentUrl","includes","error","message","quit"],"sources":["C:/Users/rayan/Documents/GitHub/Project-Outils/frontend/src/components/Login.js"],"sourcesContent":["const { Builder, By, until } = require('selenium-webdriver');\r\n\r\nasync function testLogin() {\r\n  const driver = await new Builder().forBrowser('chrome').build();\r\n\r\n  try {\r\n    console.log(\"üöÄ Ouverture de l'application...\");\r\n    await driver.get('http://localhost:3000');\r\n\r\n    console.log(\"‚è≥ Remplissage des champs...\");\r\n    await driver.findElement(By.id('email')).sendKeys('admin@test.com');\r\n    await driver.findElement(By.id('password')).sendKeys('password');\r\n    await driver.findElement(By.css('button[type=\"submit\"]')).click();\r\n\r\n    console.log(\"üîÑ Attente de la redirection vers /dashboard...\");\r\n    await driver.wait(until.urlContains('/dashboard'), 5000);\r\n\r\n    const url = await driver.getCurrentUrl();\r\n    if (url.includes('/dashboard')) {\r\n      console.log(\"‚úÖ Connexion r√©ussie !\");\r\n    } else {\r\n      console.log(\"‚ùå Redirection √©chou√©e !\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"‚ùå Erreur lors du test :\", error.message);\r\n  } finally {\r\n    await driver.quit();\r\n  }\r\n}\r\n\r\ntestLogin();\r\n"],"mappings":"AAAA,MAAM;EAAEA,OAAO;EAAEC,EAAE;EAAEC;AAAM,CAAC,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAE5D,eAAeC,SAASA,CAAA,EAAG;EACzB,MAAMC,MAAM,GAAG,MAAM,IAAIL,OAAO,CAAC,CAAC,CAACM,UAAU,CAAC,QAAQ,CAAC,CAACC,KAAK,CAAC,CAAC;EAE/D,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IAC/C,MAAMJ,MAAM,CAACK,GAAG,CAAC,uBAAuB,CAAC;IAEzCF,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C,MAAMJ,MAAM,CAACM,WAAW,CAACV,EAAE,CAACW,EAAE,CAAC,OAAO,CAAC,CAAC,CAACC,QAAQ,CAAC,gBAAgB,CAAC;IACnE,MAAMR,MAAM,CAACM,WAAW,CAACV,EAAE,CAACW,EAAE,CAAC,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,UAAU,CAAC;IAChE,MAAMR,MAAM,CAACM,WAAW,CAACV,EAAE,CAACa,GAAG,CAAC,uBAAuB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;IAEjEP,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;IAC9D,MAAMJ,MAAM,CAACW,IAAI,CAACd,KAAK,CAACe,WAAW,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC;IAExD,MAAMC,GAAG,GAAG,MAAMb,MAAM,CAACc,aAAa,CAAC,CAAC;IACxC,IAAID,GAAG,CAACE,QAAQ,CAAC,YAAY,CAAC,EAAE;MAC9BZ,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACtC,CAAC,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACxC;EACF,CAAC,CAAC,OAAOY,KAAK,EAAE;IACdb,OAAO,CAACa,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACC,OAAO,CAAC;EACzD,CAAC,SAAS;IACR,MAAMjB,MAAM,CAACkB,IAAI,CAAC,CAAC;EACrB;AACF;AAEAnB,SAAS,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}