{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst {\n  BytesValue,\n  Header\n} = require('./networkTypes');\n\n/**\n * Represents the parameters for a continue request command.\n * Described in https://w3c.github.io/webdriver-bidi/#command-network-continueRequest.\n */\nclass ContinueRequestParameters {\n  #map = new Map();\n  constructor(request) {\n    this.#map.set('request', request);\n  }\n\n  /**\n   * Sets the body value for the request.\n   *\n   * @param {BytesValue} value - The value to set as the body. Must be an instance of BytesValue.\n   * @returns {ContinueRequestParameters} - The current instance of the ContinueRequestParameters for chaining.\n   * @throws {Error} - If the value is not an instance of BytesValue.\n   */\n  body(value) {\n    if (!(value instanceof BytesValue)) {\n      throw new Error(`Value must be an instance of BytesValue. Received: '${value})'`);\n    }\n    this.#map.set('body', Object.fromEntries(value.asMap()));\n    return this;\n  }\n\n  /**\n   * Sets the cookies for the request.\n   *\n   * @param {Header[]} cookieHeaders - An array of cookie headers.\n   * @returns {ContinueRequestParameters} - The current instance of the ContinueRequestParameters for chaining.\n   * @throws {Error} - If a cookie header is not an instance of Header.\n   */\n  cookies(cookieHeaders) {\n    const cookies = [];\n    cookieHeaders.forEach(header => {\n      if (!(header instanceof Header)) {\n        throw new Error(`CookieHeader must be an instance of Header. Received:'${header}'`);\n      }\n      cookies.push(Object.fromEntries(header.asMap()));\n    });\n    this.#map.set('cookies', cookies);\n    return this;\n  }\n\n  /**\n   * Sets the headers for the request.\n   *\n   * @param {Header[]} headers - An array of Header objects.\n   * @returns {ContinueRequestParameters} - The current instance of the ContinueRequestParameters for chaining.\n   * @throws {Error} - If the header value is not an instance of Header.\n   */\n  headers(headers) {\n    const headerList = [];\n    headers.forEach(header => {\n      if (!(header instanceof Header)) {\n        throw new Error(`Header value must be an instance of Header. Received:'${header}'`);\n      }\n      headerList.push(Object.fromEntries(header.asMap()));\n    });\n    this.#map.set('headers', headerList);\n    return this;\n  }\n\n  /**\n   * Sets the HTTP method for the request.\n   *\n   * @param {string} method - The HTTP method to be set.\n   * @returns {ContinueRequestParameters} - The updated `continueRequestParameters` object.\n   * @throws {Error} - If the method parameter is not a string.\n   */\n  method(method) {\n    if (typeof method !== 'string') {\n      throw new Error(`Http method must be a string. Received: '${method})'`);\n    }\n    this.#map.set('method', method);\n    return this;\n  }\n\n  /**\n   * Sets the URL for the request.\n   *\n   * @param {string} url - The URL to set for the request.\n   * @returns {ContinueRequestParameters} - The current instance of the ContinueRequestParameters for chaining.\n   * @throws {Error} - If the url parameter is not a string.\n   */\n  url(url) {\n    if (typeof url !== 'string') {\n      throw new Error(`Url must be a string. Received:'${url}'`);\n    }\n    this.#map.set('url', url);\n    return this;\n  }\n  asMap() {\n    return this.#map;\n  }\n}\nmodule.exports = {\n  ContinueRequestParameters\n};","map":{"version":3,"names":["BytesValue","Header","require","ContinueRequestParameters","map","Map","constructor","request","set","body","value","Error","Object","fromEntries","asMap","cookies","cookieHeaders","forEach","header","push","headers","headerList","method","url","module","exports"],"sources":["C:/Users/rayan/Documents/GitHub/Project-Outils/node_modules/selenium-webdriver/bidi/continueRequestParameters.js"],"sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst { BytesValue, Header } = require('./networkTypes')\n\n/**\n * Represents the parameters for a continue request command.\n * Described in https://w3c.github.io/webdriver-bidi/#command-network-continueRequest.\n */\nclass ContinueRequestParameters {\n  #map = new Map()\n\n  constructor(request) {\n    this.#map.set('request', request)\n  }\n\n  /**\n   * Sets the body value for the request.\n   *\n   * @param {BytesValue} value - The value to set as the body. Must be an instance of BytesValue.\n   * @returns {ContinueRequestParameters} - The current instance of the ContinueRequestParameters for chaining.\n   * @throws {Error} - If the value is not an instance of BytesValue.\n   */\n  body(value) {\n    if (!(value instanceof BytesValue)) {\n      throw new Error(`Value must be an instance of BytesValue. Received: '${value})'`)\n    }\n    this.#map.set('body', Object.fromEntries(value.asMap()))\n    return this\n  }\n\n  /**\n   * Sets the cookies for the request.\n   *\n   * @param {Header[]} cookieHeaders - An array of cookie headers.\n   * @returns {ContinueRequestParameters} - The current instance of the ContinueRequestParameters for chaining.\n   * @throws {Error} - If a cookie header is not an instance of Header.\n   */\n  cookies(cookieHeaders) {\n    const cookies = []\n    cookieHeaders.forEach((header) => {\n      if (!(header instanceof Header)) {\n        throw new Error(`CookieHeader must be an instance of Header. Received:'${header}'`)\n      }\n      cookies.push(Object.fromEntries(header.asMap()))\n    })\n\n    this.#map.set('cookies', cookies)\n    return this\n  }\n\n  /**\n   * Sets the headers for the request.\n   *\n   * @param {Header[]} headers - An array of Header objects.\n   * @returns {ContinueRequestParameters} - The current instance of the ContinueRequestParameters for chaining.\n   * @throws {Error} - If the header value is not an instance of Header.\n   */\n  headers(headers) {\n    const headerList = []\n    headers.forEach((header) => {\n      if (!(header instanceof Header)) {\n        throw new Error(`Header value must be an instance of Header. Received:'${header}'`)\n      }\n      headerList.push(Object.fromEntries(header.asMap()))\n    })\n\n    this.#map.set('headers', headerList)\n    return this\n  }\n\n  /**\n   * Sets the HTTP method for the request.\n   *\n   * @param {string} method - The HTTP method to be set.\n   * @returns {ContinueRequestParameters} - The updated `continueRequestParameters` object.\n   * @throws {Error} - If the method parameter is not a string.\n   */\n  method(method) {\n    if (typeof method !== 'string') {\n      throw new Error(`Http method must be a string. Received: '${method})'`)\n    }\n    this.#map.set('method', method)\n    return this\n  }\n\n  /**\n   * Sets the URL for the request.\n   *\n   * @param {string} url - The URL to set for the request.\n   * @returns {ContinueRequestParameters} - The current instance of the ContinueRequestParameters for chaining.\n   * @throws {Error} - If the url parameter is not a string.\n   */\n  url(url) {\n    if (typeof url !== 'string') {\n      throw new Error(`Url must be a string. Received:'${url}'`)\n    }\n\n    this.#map.set('url', url)\n    return this\n  }\n\n  asMap() {\n    return this.#map\n  }\n}\n\nmodule.exports = { ContinueRequestParameters }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}