{"ast":null,"code":"const {\n  Builder,\n  By,\n  until\n} = require('selenium-webdriver');\nasync function testLogin() {\n  console.log(\"Lancement du test login Selenium\");\n  let driver = await new Builder().forBrowser('chrome').build();\n  try {\n    // Accès à la page de login\n    await driver.get('http://localhost:3000');\n    console.log(\"Page chargée\");\n\n    // Rentre les identifiants\n    await driver.findElement(By.id('email')).sendKeys('admin@test.com');\n    await driver.findElement(By.id('password')).sendKeys('password');\n    console.log(\"✅ Champs remplis\");\n\n    // Clique sur le bouton de connexion\n    await driver.findElement(By.css('button[type=\"submit\"]')).click();\n    console.log(\"Bouton cliqué, attente de la redirection\");\n\n    // Attend que le dashboard s'affiche\n    await driver.wait(until.urlContains('/dashboard'), 5000);\n    console.log(\"Redirection réussie\");\n\n    // Optionnel : vérifier que le dashboard contient du texte attendu\n    const bodyText = await driver.findElement(By.tagName('body')).getText();\n    if (bodyText.includes('Tableau de bord') || bodyText.includes('Bienvenue')) {\n      console.log(\"Test réussi : connexion OK !\");\n    } else {\n      console.log(\"Connexion réussie mais message attendu non trouvé\");\n    }\n  } catch (error) {\n    console.error(\"Test échoué :\", error);\n  } finally {\n    await driver.quit();\n  }\n}\ntestLogin();","map":{"version":3,"names":["Builder","By","until","require","testLogin","console","log","driver","forBrowser","build","get","findElement","id","sendKeys","css","click","wait","urlContains","bodyText","tagName","getText","includes","error","quit"],"sources":["C:/Users/rayan/Documents/GitHub/Project-Outils/frontend/src/components/Login.js"],"sourcesContent":["const { Builder, By, until } = require('selenium-webdriver');\r\n\r\nasync function testLogin() {\r\n  console.log(\"Lancement du test login Selenium\");\r\n\r\n  let driver = await new Builder().forBrowser('chrome').build();\r\n\r\n  try {\r\n    // Accès à la page de login\r\n    await driver.get('http://localhost:3000');\r\n\r\n    console.log(\"Page chargée\");\r\n\r\n    // Rentre les identifiants\r\n    await driver.findElement(By.id('email')).sendKeys('admin@test.com');\r\n    await driver.findElement(By.id('password')).sendKeys('password');\r\n\r\n    console.log(\"✅ Champs remplis\");\r\n\r\n    // Clique sur le bouton de connexion\r\n    await driver.findElement(By.css('button[type=\"submit\"]')).click();\r\n\r\n    console.log(\"Bouton cliqué, attente de la redirection\");\r\n\r\n    // Attend que le dashboard s'affiche\r\n    await driver.wait(until.urlContains('/dashboard'), 5000);\r\n\r\n    console.log(\"Redirection réussie\");\r\n\r\n    // Optionnel : vérifier que le dashboard contient du texte attendu\r\n    const bodyText = await driver.findElement(By.tagName('body')).getText();\r\n    if (bodyText.includes('Tableau de bord') || bodyText.includes('Bienvenue')) {\r\n      console.log(\"Test réussi : connexion OK !\");\r\n    } else {\r\n      console.log(\"Connexion réussie mais message attendu non trouvé\");\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error(\"Test échoué :\", error);\r\n  } finally {\r\n    await driver.quit();\r\n  }\r\n}\r\n\r\ntestLogin();\r\n"],"mappings":"AAAA,MAAM;EAAEA,OAAO;EAAEC,EAAE;EAAEC;AAAM,CAAC,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAE5D,eAAeC,SAASA,CAAA,EAAG;EACzBC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;EAE/C,IAAIC,MAAM,GAAG,MAAM,IAAIP,OAAO,CAAC,CAAC,CAACQ,UAAU,CAAC,QAAQ,CAAC,CAACC,KAAK,CAAC,CAAC;EAE7D,IAAI;IACF;IACA,MAAMF,MAAM,CAACG,GAAG,CAAC,uBAAuB,CAAC;IAEzCL,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;;IAE3B;IACA,MAAMC,MAAM,CAACI,WAAW,CAACV,EAAE,CAACW,EAAE,CAAC,OAAO,CAAC,CAAC,CAACC,QAAQ,CAAC,gBAAgB,CAAC;IACnE,MAAMN,MAAM,CAACI,WAAW,CAACV,EAAE,CAACW,EAAE,CAAC,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,UAAU,CAAC;IAEhER,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;;IAE/B;IACA,MAAMC,MAAM,CAACI,WAAW,CAACV,EAAE,CAACa,GAAG,CAAC,uBAAuB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;IAEjEV,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;;IAEvD;IACA,MAAMC,MAAM,CAACS,IAAI,CAACd,KAAK,CAACe,WAAW,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC;IAExDZ,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;;IAElC;IACA,MAAMY,QAAQ,GAAG,MAAMX,MAAM,CAACI,WAAW,CAACV,EAAE,CAACkB,OAAO,CAAC,MAAM,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IACvE,IAAIF,QAAQ,CAACG,QAAQ,CAAC,iBAAiB,CAAC,IAAIH,QAAQ,CAACG,QAAQ,CAAC,WAAW,CAAC,EAAE;MAC1EhB,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC7C,CAAC,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;IAClE;EAEF,CAAC,CAAC,OAAOgB,KAAK,EAAE;IACdjB,OAAO,CAACiB,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;EACvC,CAAC,SAAS;IACR,MAAMf,MAAM,CAACgB,IAAI,CAAC,CAAC;EACrB;AACF;AAEAnB,SAAS,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}