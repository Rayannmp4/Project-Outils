{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * Represents a URL pattern to intercept.\n * Described in network.UrlPatternPattern https://w3c.github.io/webdriver-bidi/#type-network-UrlPattern\n */\nclass UrlPattern {\n  #map = new Map();\n\n  /**\n   * Sets the protocol for the URL pattern.\n   *\n   * @param {string} protocol - The protocol to set.\n   * @returns {UrlPattern} - Returns the updated instance of the URL pattern for chaining.\n   */\n  protocol(protocol) {\n    this.#map.set('protocol', protocol);\n    return this;\n  }\n\n  /**\n   * Sets the hostname for the URL pattern.\n   *\n   * @param {string} hostname - The hostname to set.\n   * @returns {UrlPattern} - Returns the updated instance of the URL pattern for chaining.\n   */\n  hostname(hostname) {\n    this.#map.set('hostname', hostname);\n    return this;\n  }\n\n  /**\n   * Sets the port for the URL pattern.\n   *\n   * @param {number} port - The port number to set.\n   * @returns {UrlPattern} - Returns the updated instance of the URL pattern for chaining.\n   * @throws {Error} - Throws an error if the port is not a number.\n   */\n  port(port) {\n    if (typeof port === 'number') {\n      this.#map.set('port', port.toString());\n    } else {\n      throw new Error(`Port must be a number. Received:'${port}'`);\n    }\n    return this;\n  }\n\n  /**\n   * Sets the pathname for the URL pattern.\n   *\n   * @param {string} pathname - The pathname to set.\n   * @returns {UrlPattern} - Returns the updated instance of the URL pattern for chaining.\n   */\n  pathname(pathname) {\n    this.#map.set('pathname', pathname);\n    return this;\n  }\n\n  /**\n   * Sets the search parameter in the URL pattern.\n   *\n   * @param {string} search - The search parameter to be set.\n   * @returns {UrlPattern} - Returns the updated instance of the URL pattern for chaining.\n   */\n  search(search) {\n    this.#map.set('search', search);\n    return this;\n  }\n  asMap() {\n    this.#map.set('type', 'pattern');\n    return this.#map;\n  }\n}\nmodule.exports = {\n  UrlPattern\n};","map":{"version":3,"names":["UrlPattern","map","Map","protocol","set","hostname","port","toString","Error","pathname","search","asMap","module","exports"],"sources":["C:/Users/rayan/Documents/GitHub/Project-Outils/node_modules/selenium-webdriver/bidi/urlPattern.js"],"sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * Represents a URL pattern to intercept.\n * Described in network.UrlPatternPattern https://w3c.github.io/webdriver-bidi/#type-network-UrlPattern\n */\nclass UrlPattern {\n  #map = new Map()\n\n  /**\n   * Sets the protocol for the URL pattern.\n   *\n   * @param {string} protocol - The protocol to set.\n   * @returns {UrlPattern} - Returns the updated instance of the URL pattern for chaining.\n   */\n  protocol(protocol) {\n    this.#map.set('protocol', protocol)\n    return this\n  }\n\n  /**\n   * Sets the hostname for the URL pattern.\n   *\n   * @param {string} hostname - The hostname to set.\n   * @returns {UrlPattern} - Returns the updated instance of the URL pattern for chaining.\n   */\n  hostname(hostname) {\n    this.#map.set('hostname', hostname)\n    return this\n  }\n\n  /**\n   * Sets the port for the URL pattern.\n   *\n   * @param {number} port - The port number to set.\n   * @returns {UrlPattern} - Returns the updated instance of the URL pattern for chaining.\n   * @throws {Error} - Throws an error if the port is not a number.\n   */\n  port(port) {\n    if (typeof port === 'number') {\n      this.#map.set('port', port.toString())\n    } else {\n      throw new Error(`Port must be a number. Received:'${port}'`)\n    }\n    return this\n  }\n\n  /**\n   * Sets the pathname for the URL pattern.\n   *\n   * @param {string} pathname - The pathname to set.\n   * @returns {UrlPattern} - Returns the updated instance of the URL pattern for chaining.\n   */\n  pathname(pathname) {\n    this.#map.set('pathname', pathname)\n    return this\n  }\n\n  /**\n   * Sets the search parameter in the URL pattern.\n   *\n   * @param {string} search - The search parameter to be set.\n   * @returns {UrlPattern} - Returns the updated instance of the URL pattern for chaining.\n   */\n  search(search) {\n    this.#map.set('search', search)\n    return this\n  }\n\n  asMap() {\n    this.#map.set('type', 'pattern')\n    return this.#map\n  }\n}\n\nmodule.exports = { UrlPattern }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAMA,UAAU,CAAC;EACf,CAACC,GAAG,GAAG,IAAIC,GAAG,CAAC,CAAC;;EAEhB;AACF;AACA;AACA;AACA;AACA;EACEC,QAAQA,CAACA,QAAQ,EAAE;IACjB,IAAI,CAAC,CAACF,GAAG,CAACG,GAAG,CAAC,UAAU,EAAED,QAAQ,CAAC;IACnC,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEE,QAAQA,CAACA,QAAQ,EAAE;IACjB,IAAI,CAAC,CAACJ,GAAG,CAACG,GAAG,CAAC,UAAU,EAAEC,QAAQ,CAAC;IACnC,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,IAAIA,CAACA,IAAI,EAAE;IACT,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;MAC5B,IAAI,CAAC,CAACL,GAAG,CAACG,GAAG,CAAC,MAAM,EAAEE,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;IACxC,CAAC,MAAM;MACL,MAAM,IAAIC,KAAK,CAAC,oCAAoCF,IAAI,GAAG,CAAC;IAC9D;IACA,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEG,QAAQA,CAACA,QAAQ,EAAE;IACjB,IAAI,CAAC,CAACR,GAAG,CAACG,GAAG,CAAC,UAAU,EAAEK,QAAQ,CAAC;IACnC,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,MAAMA,CAACA,MAAM,EAAE;IACb,IAAI,CAAC,CAACT,GAAG,CAACG,GAAG,CAAC,QAAQ,EAAEM,MAAM,CAAC;IAC/B,OAAO,IAAI;EACb;EAEAC,KAAKA,CAAA,EAAG;IACN,IAAI,CAAC,CAACV,GAAG,CAACG,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC;IAChC,OAAO,IAAI,CAAC,CAACH,GAAG;EAClB;AACF;AAEAW,MAAM,CAACC,OAAO,GAAG;EAAEb;AAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}