{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst {\n  Network: getNetwork\n} = require('../bidi/network');\nconst {\n  InterceptPhase\n} = require('../bidi/interceptPhase');\nconst {\n  AddInterceptParameters\n} = require('../bidi/addInterceptParameters');\nclass Network {\n  #callbackId = 0;\n  #driver;\n  #network;\n  #authHandlers = new Map();\n  constructor(driver) {\n    this.#driver = driver;\n  }\n\n  // This should be done in the constructor.\n  // But since it needs to call async methods we cannot do that in the constructor.\n  // We can have a separate async method that initialises the Network instance.\n  // However, that pattern does not allow chaining the methods as we would like the user to use it.\n  // Since it involves awaiting to get the instance and then another await to call the method.\n  // Using this allows the user to do this \"await driver.network.addAuthenticationHandler(callback)\"\n  async #init() {\n    if (this.#network !== undefined) {\n      return;\n    }\n    this.#network = await getNetwork(this.#driver);\n    await this.#network.addIntercept(new AddInterceptParameters(InterceptPhase.AUTH_REQUIRED));\n    await this.#network.authRequired(async event => {\n      const requestId = event.request.request;\n      const uri = event.request.url;\n      const credentials = this.getAuthCredentials(uri);\n      if (credentials !== null) {\n        await this.#network.continueWithAuth(requestId, credentials.username, credentials.password);\n        return;\n      }\n      await this.#network.continueWithAuthNoCredentials(requestId);\n    });\n  }\n  getAuthCredentials(uri) {\n    for (let [, value] of this.#authHandlers) {\n      if (uri.match(value.uri)) {\n        return value;\n      }\n    }\n    return null;\n  }\n  async addAuthenticationHandler(username, password, uri = '//') {\n    await this.#init();\n    const id = this.#callbackId++;\n    this.#authHandlers.set(id, {\n      username,\n      password,\n      uri\n    });\n    return id;\n  }\n  async removeAuthenticationHandler(id) {\n    await this.#init();\n    if (this.#authHandlers.has(id)) {\n      this.#authHandlers.delete(id);\n    } else {\n      throw Error(`Callback with id ${id} not found`);\n    }\n  }\n  async clearAuthenticationHandlers() {\n    this.#authHandlers.clear();\n  }\n}\nmodule.exports = Network;","map":{"version":3,"names":["Network","getNetwork","require","InterceptPhase","AddInterceptParameters","callbackId","driver","network","authHandlers","Map","constructor","init","#init","undefined","addIntercept","AUTH_REQUIRED","authRequired","event","requestId","request","uri","url","credentials","getAuthCredentials","continueWithAuth","username","password","continueWithAuthNoCredentials","value","match","addAuthenticationHandler","id","set","removeAuthenticationHandler","has","delete","Error","clearAuthenticationHandlers","clear","module","exports"],"sources":["C:/Users/rayan/Documents/GitHub/Project-Outils/node_modules/selenium-webdriver/lib/network.js"],"sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst { Network: getNetwork } = require('../bidi/network')\nconst { InterceptPhase } = require('../bidi/interceptPhase')\nconst { AddInterceptParameters } = require('../bidi/addInterceptParameters')\n\nclass Network {\n  #callbackId = 0\n  #driver\n  #network\n  #authHandlers = new Map()\n\n  constructor(driver) {\n    this.#driver = driver\n  }\n\n  // This should be done in the constructor.\n  // But since it needs to call async methods we cannot do that in the constructor.\n  // We can have a separate async method that initialises the Network instance.\n  // However, that pattern does not allow chaining the methods as we would like the user to use it.\n  // Since it involves awaiting to get the instance and then another await to call the method.\n  // Using this allows the user to do this \"await driver.network.addAuthenticationHandler(callback)\"\n  async #init() {\n    if (this.#network !== undefined) {\n      return\n    }\n    this.#network = await getNetwork(this.#driver)\n\n    await this.#network.addIntercept(new AddInterceptParameters(InterceptPhase.AUTH_REQUIRED))\n\n    await this.#network.authRequired(async (event) => {\n      const requestId = event.request.request\n      const uri = event.request.url\n      const credentials = this.getAuthCredentials(uri)\n      if (credentials !== null) {\n        await this.#network.continueWithAuth(requestId, credentials.username, credentials.password)\n        return\n      }\n\n      await this.#network.continueWithAuthNoCredentials(requestId)\n    })\n  }\n\n  getAuthCredentials(uri) {\n    for (let [, value] of this.#authHandlers) {\n      if (uri.match(value.uri)) {\n        return value\n      }\n    }\n    return null\n  }\n  async addAuthenticationHandler(username, password, uri = '//') {\n    await this.#init()\n\n    const id = this.#callbackId++\n\n    this.#authHandlers.set(id, { username, password, uri })\n    return id\n  }\n\n  async removeAuthenticationHandler(id) {\n    await this.#init()\n\n    if (this.#authHandlers.has(id)) {\n      this.#authHandlers.delete(id)\n    } else {\n      throw Error(`Callback with id ${id} not found`)\n    }\n  }\n\n  async clearAuthenticationHandlers() {\n    this.#authHandlers.clear()\n  }\n}\n\nmodule.exports = Network\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;EAAEA,OAAO,EAAEC;AAAW,CAAC,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC1D,MAAM;EAAEC;AAAe,CAAC,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAC5D,MAAM;EAAEE;AAAuB,CAAC,GAAGF,OAAO,CAAC,gCAAgC,CAAC;AAE5E,MAAMF,OAAO,CAAC;EACZ,CAACK,UAAU,GAAG,CAAC;EACf,CAACC,MAAM;EACP,CAACC,OAAO;EACR,CAACC,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC;EAEzBC,WAAWA,CAACJ,MAAM,EAAE;IAClB,IAAI,CAAC,CAACA,MAAM,GAAGA,MAAM;EACvB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAACK,IAAIC,CAAA,EAAG;IACZ,IAAI,IAAI,CAAC,CAACL,OAAO,KAAKM,SAAS,EAAE;MAC/B;IACF;IACA,IAAI,CAAC,CAACN,OAAO,GAAG,MAAMN,UAAU,CAAC,IAAI,CAAC,CAACK,MAAM,CAAC;IAE9C,MAAM,IAAI,CAAC,CAACC,OAAO,CAACO,YAAY,CAAC,IAAIV,sBAAsB,CAACD,cAAc,CAACY,aAAa,CAAC,CAAC;IAE1F,MAAM,IAAI,CAAC,CAACR,OAAO,CAACS,YAAY,CAAC,MAAOC,KAAK,IAAK;MAChD,MAAMC,SAAS,GAAGD,KAAK,CAACE,OAAO,CAACA,OAAO;MACvC,MAAMC,GAAG,GAAGH,KAAK,CAACE,OAAO,CAACE,GAAG;MAC7B,MAAMC,WAAW,GAAG,IAAI,CAACC,kBAAkB,CAACH,GAAG,CAAC;MAChD,IAAIE,WAAW,KAAK,IAAI,EAAE;QACxB,MAAM,IAAI,CAAC,CAACf,OAAO,CAACiB,gBAAgB,CAACN,SAAS,EAAEI,WAAW,CAACG,QAAQ,EAAEH,WAAW,CAACI,QAAQ,CAAC;QAC3F;MACF;MAEA,MAAM,IAAI,CAAC,CAACnB,OAAO,CAACoB,6BAA6B,CAACT,SAAS,CAAC;IAC9D,CAAC,CAAC;EACJ;EAEAK,kBAAkBA,CAACH,GAAG,EAAE;IACtB,KAAK,IAAI,GAAGQ,KAAK,CAAC,IAAI,IAAI,CAAC,CAACpB,YAAY,EAAE;MACxC,IAAIY,GAAG,CAACS,KAAK,CAACD,KAAK,CAACR,GAAG,CAAC,EAAE;QACxB,OAAOQ,KAAK;MACd;IACF;IACA,OAAO,IAAI;EACb;EACA,MAAME,wBAAwBA,CAACL,QAAQ,EAAEC,QAAQ,EAAEN,GAAG,GAAG,IAAI,EAAE;IAC7D,MAAM,IAAI,CAAC,CAACT,IAAI,CAAC,CAAC;IAElB,MAAMoB,EAAE,GAAG,IAAI,CAAC,CAAC1B,UAAU,EAAE;IAE7B,IAAI,CAAC,CAACG,YAAY,CAACwB,GAAG,CAACD,EAAE,EAAE;MAAEN,QAAQ;MAAEC,QAAQ;MAAEN;IAAI,CAAC,CAAC;IACvD,OAAOW,EAAE;EACX;EAEA,MAAME,2BAA2BA,CAACF,EAAE,EAAE;IACpC,MAAM,IAAI,CAAC,CAACpB,IAAI,CAAC,CAAC;IAElB,IAAI,IAAI,CAAC,CAACH,YAAY,CAAC0B,GAAG,CAACH,EAAE,CAAC,EAAE;MAC9B,IAAI,CAAC,CAACvB,YAAY,CAAC2B,MAAM,CAACJ,EAAE,CAAC;IAC/B,CAAC,MAAM;MACL,MAAMK,KAAK,CAAC,oBAAoBL,EAAE,YAAY,CAAC;IACjD;EACF;EAEA,MAAMM,2BAA2BA,CAAA,EAAG;IAClC,IAAI,CAAC,CAAC7B,YAAY,CAAC8B,KAAK,CAAC,CAAC;EAC5B;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGxC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}